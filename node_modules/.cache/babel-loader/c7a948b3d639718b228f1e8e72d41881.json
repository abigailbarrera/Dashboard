{"ast":null,"code":"var _jsxFileName = \"/Users/rocadeluzeterna/postscript-dashboard/src/components/OpenCampaigns.jsx\";\nimport React from 'react';\nimport { Table, Container } from 'react-bootstrap';\nimport data from '../data/campaigns.json';\n\nconst OpenCampaigns = () => {\n  const campaigns = data.campaigns;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, \"Target Segment\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, campaigns.map(campaign => {\n    if (campaign.status === \"Sent\") {\n      console.log('sent');\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: campaign.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 37\n        }\n      }, campaign.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }, campaign.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 37\n        }\n      }, campaign.stats.sent), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }\n      }, campaign.stats.clicked));\n    } else {\n      return console.log(\"not sent\");\n    }\n  }))), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Live Campaigns\"), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Col, {\n    size: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Target Segment\")), campaigns.map(campaign => {\n    if (campaign.status === \"Preview\") {\n      let segmentName = '';\n\n      if (campaign.segment_id === 1) {\n        segmentName = data.segments[0].name;\n      } else if (campaign.segment_id === 2) {\n        segmentName = data.segments[1].name;\n      } else if (campaign.segment_id === 3) {\n        segmentName = data.segments[2].name;\n      }\n\n      return /*#__PURE__*/React.createElement(Row, {\n        key: campaign.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        size: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, campaign.name), /*#__PURE__*/React.createElement(Col, {\n        size: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, segmentName));\n    } else {\n      return console.log(\"sent\");\n    }\n  })));\n};\n\nexport default OpenCampaigns;","map":{"version":3,"sources":["/Users/rocadeluzeterna/postscript-dashboard/src/components/OpenCampaigns.jsx"],"names":["React","Table","Container","data","OpenCampaigns","campaigns","map","campaign","status","console","log","id","name","stats","sent","clicked","segmentName","segment_id","segments"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Container } from 'react-bootstrap';\n\nimport data from '../data/campaigns.json';\n\nconst OpenCampaigns = () => {\n    const campaigns = data.campaigns;\n\n    return (\n        <Container>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Target Segment</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {campaigns.map(campaign => {\n                        if (campaign.status === \"Sent\") {\n                            console.log('sent');\n                            return (\n                                <tr key={campaign.id}>\n                                    <td>{campaign.id}</td>\n                                    <td>{campaign.name}</td>\n                                    <td>{campaign.stats.sent}</td>\n                                    <td>{campaign.stats.clicked}</td>\n                                </tr>\n                            )\n                        } else {\n                            return console.log(\"not sent\");\n                        }\n                    })}\n                </tbody>\n            </Table>\n            <Header>Live Campaigns</Header>\n            <Grid>\n                <Row>\n                    <Col size={2}>\n                        Name\n                    </Col>\n                    <Col size={1}>\n                        Target Segment\n                    </Col>\n                </Row>\n                {campaigns.map(campaign => {\n                    if (campaign.status === \"Preview\") {\n                        let segmentName = '';\n                        if (campaign.segment_id === 1) {\n                            segmentName = data.segments[0].name;\n                        } else if (campaign.segment_id === 2) {\n                            segmentName = data.segments[1].name;\n                        } else if (campaign.segment_id === 3) {\n                            segmentName = data.segments[2].name;\n                        }\n\n                        return (\n                            <Row key={campaign.id}>\n                                <Col size={2}>\n                                    {campaign.name}\n                                </Col>\n                                <Col size={1}>\n                                    {segmentName}\n                                </Col>\n                            </Row>\n                        )\n                    } else {\n                        return console.log(\"sent\");\n                    }\n                })}\n            </Grid>\n        </Container>\n    )\n}\n\nexport default OpenCampaigns;"]},"metadata":{},"sourceType":"module"}