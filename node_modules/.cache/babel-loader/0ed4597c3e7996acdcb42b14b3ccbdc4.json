{"ast":null,"code":"var _jsxFileName = \"/Users/rocadeluzeterna/postscript-dashboard/src/components/EditCampaign.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { Form, Button, Container, Row } from 'react-bootstrap';\nconst H1 = styled.h1`\n    color: #282c34;\n    margin: 0 auto;\n    padding: 50px 0;\n    font-size: 48px;\n    font-size: 48px;\n    letter-spacing: -1.5px;\n`;\nexport const Editcampaign = route => {\n  let history = useHistory();\n  const {\n    segments\n  } = React.useContext(GlobalContext);\n  const {\n    campaigns,\n    editCampaign\n  } = useContext(GlobalContext);\n  const [selectedCampaign, setSeletedCampaign] = useState({\n    id: null,\n    name: \"\",\n    text: \"\",\n    status: \"Preview\",\n    segment_id: \"\",\n    media: \"\",\n    stats: null\n  });\n  const currentCampaignId = route.match.params.id;\n  useEffect(() => {\n    const campaignId = currentCampaignId;\n    const selectedCampaign = campaigns.find(camp => camp.id === parseInt(campaignId));\n    setSeletedCampaign(selectedCampaign);\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    editCampaign(selectedCampaign);\n    history.push(\"/\");\n  };\n\n  const handleOnChange = (campaignKey, value) => setSeletedCampaign({ ...selectedCampaign,\n    [campaignKey]: value\n  });\n\n  const handleSelectChange = (campaignKey, e) => {\n    // console.log(\"target\", e.target.value);\n    // const selectedSegment = segments.filter(segment => segment.name === e.target.value);\n    // console.log(\"selectedSegment\", selectedSegment[0].id);\n    // setSeletedCampaign({ ...selectedCampaign, [campaignKey]: selectedSegment[0].id});\n    console.log(\"selectedCampaign\", selectedCampaign);\n    this.setSeletedCampaign({ ...selectedCampaign,\n      [campaignKey]: selectedSegment[0].id\n    }, () => console.log(\"selectedCampaign\", selectedCampaign));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(H1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Edit Campaign\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Campaign Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"Enter name\",\n    value: selectedCampaign.name,\n    onChange: e => handleOnChange(\"name\", e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Segment\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleSelectChange.bind(\"segment_id\", this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, segments.map(segment => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: segment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, segment.name);\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Add Photo or Gif\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Add Tag\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    value: selectedCampaign.text,\n    onChange: e => handleOnChange(\"text\", e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Cancel\"))))));\n};","map":{"version":3,"sources":["/Users/rocadeluzeterna/postscript-dashboard/src/components/EditCampaign.jsx"],"names":["React","useState","useContext","useEffect","GlobalContext","useHistory","Link","styled","Form","Button","Container","Row","H1","h1","Editcampaign","route","history","segments","campaigns","editCampaign","selectedCampaign","setSeletedCampaign","id","name","text","status","segment_id","media","stats","currentCampaignId","match","params","campaignId","find","camp","parseInt","onSubmit","e","preventDefault","push","handleOnChange","campaignKey","value","handleSelectChange","console","log","selectedSegment","target","bind","map","segment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,GAAlC,QAA6C,iBAA7C;AAEA,MAAMC,EAAE,GAAGL,MAAM,CAACM,EAAG;;;;;;;CAArB;AASA,OAAO,MAAMC,YAAY,GAAGC,KAAK,IAAI;AACnC,MAAIC,OAAO,GAAGX,UAAU,EAAxB;AACA,QAAM;AAACY,IAAAA;AAAD,MAAajB,KAAK,CAACE,UAAN,CAAiBE,aAAjB,CAAnB;AACA,QAAM;AAAEc,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BjB,UAAU,CAACE,aAAD,CAA9C;AACA,QAAM,CAACgB,gBAAD,EAAmBC,kBAAnB,IAAyCpB,QAAQ,CAAC;AACtDqB,IAAAA,EAAE,EAAE,IADkD;AAEtDC,IAAAA,IAAI,EAAE,EAFgD;AAGtDC,IAAAA,IAAI,EAAE,EAHgD;AAItDC,IAAAA,MAAM,EAAE,SAJ8C;AAKtDC,IAAAA,UAAU,EAAE,EAL0C;AAMtDC,IAAAA,KAAK,EAAE,EAN+C;AAOtDC,IAAAA,KAAK,EAAE;AAP+C,GAAD,CAAvD;AASA,QAAMC,iBAAiB,GAAGd,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBT,EAA7C;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,UAAU,GAAGH,iBAAnB;AACA,UAAMT,gBAAgB,GAAGF,SAAS,CAACe,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYa,QAAQ,CAACH,UAAD,CAA3C,CAAzB;AACAX,IAAAA,kBAAkB,CAACD,gBAAD,CAAlB;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMgB,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAnB,IAAAA,YAAY,CAACC,gBAAD,CAAZ;AACAJ,IAAAA,OAAO,CAACuB,IAAR,CAAa,GAAb;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAG,CAACC,WAAD,EAAcC,KAAd,KACrBrB,kBAAkB,CAAC,EAAE,GAAGD,gBAAL;AAAuB,KAACqB,WAAD,GAAeC;AAAtC,GAAD,CADpB;;AAGA,QAAMC,kBAAkB,GAAG,CAACF,WAAD,EAAcJ,CAAd,KAAoB;AAC7C;AACA;AACA;AACA;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCzB,gBAAhC;AAEA,SAAKC,kBAAL,CAAwB,EAAE,GAAGD,gBAAL;AAAuB,OAACqB,WAAD,GAAeK,eAAe,CAAC,CAAD,CAAf,CAAmBxB;AAAzD,KAAxB,EAAsF,MAAOsB,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCzB,gBAAhC,CAA7F;AACD,GARD;;AAUA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,KAAK,EAAEhB,gBAAgB,CAACG,IAH1B;AAIE,IAAA,QAAQ,EAAEc,CAAC,IAAIG,cAAc,CAAC,MAAD,EAASH,CAAC,CAACU,MAAF,CAASL,KAAlB,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAWE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAA0B,IAAA,QAAQ,EAAEC,kBAAkB,CAACK,IAAnB,CAAwB,YAAxB,EAAsC,IAAtC,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/B,QAAQ,CAACgC,GAAT,CAAaC,OAAO,IAAI;AACrB,wBACE;AAAQ,MAAA,GAAG,EAAEA,OAAO,CAAC5B,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B4B,OAAO,CAAC3B,IAAlC,CADF;AAGH,GAJA,CADH,CAFF,CAXF,eAsBE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,8BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,KAAK,EAAEH,gBAAgB,CAACI,IAH1B;AAIE,IAAA,QAAQ,EAAEa,CAAC,IAAIG,cAAc,CAAC,MAAD,EAASH,CAAC,CAACU,MAAF,CAASL,KAAlB,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAtBF,eAkCE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCF,eAsCE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAtCF,CAFF,CADF,CADF,CADF;AAmDD,CA3FM","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport { Form, Button, Container, Row } from 'react-bootstrap';\n\nconst H1 = styled.h1`\n    color: #282c34;\n    margin: 0 auto;\n    padding: 50px 0;\n    font-size: 48px;\n    font-size: 48px;\n    letter-spacing: -1.5px;\n`\n\nexport const Editcampaign = route => {\n  let history = useHistory();\n  const {segments} = React.useContext(GlobalContext);\n  const { campaigns, editCampaign } = useContext(GlobalContext);\n  const [selectedCampaign, setSeletedCampaign] = useState({\n    id: null,\n    name: \"\",\n    text: \"\",\n    status: \"Preview\",\n    segment_id: \"\",\n    media: \"\",\n    stats: null\n  });\n  const currentCampaignId = route.match.params.id;\n\n  useEffect(() => {\n    const campaignId = currentCampaignId;\n    const selectedCampaign = campaigns.find(camp => camp.id === parseInt(campaignId));\n    setSeletedCampaign(selectedCampaign);\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    editCampaign(selectedCampaign);\n    history.push(\"/\");\n  };\n\n  const handleOnChange = (campaignKey, value) =>\n    setSeletedCampaign({ ...selectedCampaign, [campaignKey]: value });\n\n  const handleSelectChange = (campaignKey, e) => {\n    // console.log(\"target\", e.target.value);\n    // const selectedSegment = segments.filter(segment => segment.name === e.target.value);\n    // console.log(\"selectedSegment\", selectedSegment[0].id);\n    // setSeletedCampaign({ ...selectedCampaign, [campaignKey]: selectedSegment[0].id});\n    console.log(\"selectedCampaign\", selectedCampaign);\n\n    this.setSeletedCampaign({ ...selectedCampaign, [campaignKey]: selectedSegment[0].id}, () =>  console.log(\"selectedCampaign\", selectedCampaign));\n  }\n\n  return (\n    <Container>\n      <Row>\n        <div className=\"col-6 mt-5\">\n          <H1>Edit Campaign</H1>\n          <Form onSubmit={onSubmit}>\n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Campaign Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={selectedCampaign.name}\n                onChange={e => handleOnChange(\"name\", e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Segment</Form.Label>\n              <Form.Control as=\"select\" onChange={handleSelectChange.bind(\"segment_id\", this)}>\n                {segments.map(segment => {\n                    return (\n                      <option key={segment.id}>{segment.name}</option>\n                    )\n                })}\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Message</Form.Label>\n              <button type=\"button\" className=\"btn btn-sm m-2\">Add Photo or Gif</button>\n              <button type=\"button\" className=\"btn btn-sm m-0\">Add Tag</button>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"3\"\n                value={selectedCampaign.text}\n                onChange={e => handleOnChange(\"text\", e.target.value)}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n\n            <Link to=\"/\">\n                <button type=\"button\" className=\"btn btn-link m-5\">Cancel</button>\n            </Link>\n          </Form>\n        </div>\n      </Row>\n    </Container>\n  );\n};"]},"metadata":{},"sourceType":"module"}